Terminals unused in grammar

    LINESTART
    EQUALS
    LESSTHAN
    GREATERTHAN
    LTHANEQTO
    GTHANEQTO
    ALPHA
    BETA
    GAMMA
    GAMMACAP
    DELTA
    DELTACAP
    EPSILON
    VAREPSILON
    ZETA
    ETA
    THETA
    THETACAP
    VARTHETA
    IOTA
    KAPPA
    LAMBDA
    LAMBDACAP
    MU
    NU
    XI
    XICAP
    PI
    PICAP
    SIGMA
    SIGMACAP
    TAU
    UPSILON
    PHI
    PHICAP
    VARPHI
    CHI
    PSI
    PSICAP
    OMEGA
    E
    INFINITY
    SQRT
    LOG
    LN
    ABS
    FLOOR
    CEIL
    TEXT
    BB
    HAT
    FRAC
    ROOT
    LBRAC
    LSBRAC
    LCBRAC
    LANGLE
    LABRAC
    RBRAC
    RSBRAC
    RCBRAC
    RANGLE
    RABRAC


State 34 conflicts: 5 shift/reduce
State 35 conflicts: 5 shift/reduce


Grammar

    0 $accept: asciimath $end

    1 asciimath: %empty
    2          | asciimath line

    3 line: ENDL
    4     | expression ENDL

    5 expression: unary expression
    6           | expression bin expression
    7           | num

    8 num: INT
    9    | FLOAT

   10 bin: ADD
   11    | SUB
   12    | MUL
   13    | DIV
   14    | EXP

   15 unary: BRACK
   16      | SUB
   17      | ASIN
   18      | ACOS
   19      | ATAN
   20      | SINH
   21      | COSH
   22      | TANH
   23      | SECH
   24      | CSCH
   25      | COTH
   26      | SIN
   27      | COS
   28      | TAN
   29      | SEC
   30      | CSC
   31      | COT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT <ival> (258) 8
    FLOAT <fval> (259) 9
    LINESTART (260)
    EQUALS (261)
    LESSTHAN (262)
    GREATERTHAN (263)
    LTHANEQTO (264)
    GTHANEQTO (265)
    ALPHA (266)
    BETA (267)
    GAMMA (268)
    GAMMACAP (269)
    DELTA (270)
    DELTACAP (271)
    EPSILON (272)
    VAREPSILON (273)
    ZETA (274)
    ETA (275)
    THETA (276)
    THETACAP (277)
    VARTHETA (278)
    IOTA (279)
    KAPPA (280)
    LAMBDA (281)
    LAMBDACAP (282)
    MU (283)
    NU (284)
    XI (285)
    XICAP (286)
    PI (287)
    PICAP (288)
    SIGMA (289)
    SIGMACAP (290)
    TAU (291)
    UPSILON (292)
    PHI (293)
    PHICAP (294)
    VARPHI (295)
    CHI (296)
    PSI (297)
    PSICAP (298)
    OMEGA (299)
    E (300)
    INFINITY (301)
    SQRT (302)
    LOG (303)
    LN (304)
    ABS (305)
    FLOOR (306)
    CEIL (307)
    ASIN (308) 17
    ACOS (309) 18
    ATAN (310) 19
    SINH (311) 20
    COSH (312) 21
    TANH (313) 22
    SECH (314) 23
    CSCH (315) 24
    COTH (316) 25
    SIN (317) 26
    COS (318) 27
    TAN (319) 28
    SEC (320) 29
    CSC (321) 30
    COT (322) 31
    TEXT (323)
    BB (324)
    HAT (325)
    FRAC (326)
    ROOT (327)
    ADD (328) 10
    SUB (329) 11 16
    MUL (330) 12
    DIV (331) 13
    NEG (332)
    BRACK (333) 15
    EXP (334) 14
    LBRAC (335)
    LSBRAC (336)
    LCBRAC (337)
    LANGLE (338)
    LABRAC (339)
    RBRAC (340)
    RSBRAC (341)
    RCBRAC (342)
    RANGLE (343)
    RABRAC (344)
    ENDL (345) 3 4


Nonterminals, with rules where they appear

    $accept (91)
        on left: 0
    asciimath (92)
        on left: 1 2
        on right: 0 2
    line (93)
        on left: 3 4
        on right: 2
    expression (94)
        on left: 5 6 7
        on right: 4 5 6
    num (95)
        on left: 8 9
        on right: 7
    bin (96)
        on left: 10 11 12 13 14
        on right: 6
    unary (97)
        on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
        on right: 5


State 0

    0 $accept: . asciimath $end

    $default  reduce using rule 1 (asciimath)

    asciimath  go to state 1


State 1

    0 $accept: asciimath . $end
    2 asciimath: asciimath . line

    $end   shift, and go to state 2
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4
    ASIN   shift, and go to state 5
    ACOS   shift, and go to state 6
    ATAN   shift, and go to state 7
    SINH   shift, and go to state 8
    COSH   shift, and go to state 9
    TANH   shift, and go to state 10
    SECH   shift, and go to state 11
    CSCH   shift, and go to state 12
    COTH   shift, and go to state 13
    SIN    shift, and go to state 14
    COS    shift, and go to state 15
    TAN    shift, and go to state 16
    SEC    shift, and go to state 17
    CSC    shift, and go to state 18
    COT    shift, and go to state 19
    SUB    shift, and go to state 20
    BRACK  shift, and go to state 21
    ENDL   shift, and go to state 22

    line        go to state 23
    expression  go to state 24
    num         go to state 25
    unary       go to state 26


State 2

    0 $accept: asciimath $end .

    $default  accept


State 3

    8 num: INT .

    $default  reduce using rule 8 (num)


State 4

    9 num: FLOAT .

    $default  reduce using rule 9 (num)


State 5

   17 unary: ASIN .

    $default  reduce using rule 17 (unary)


State 6

   18 unary: ACOS .

    $default  reduce using rule 18 (unary)


State 7

   19 unary: ATAN .

    $default  reduce using rule 19 (unary)


State 8

   20 unary: SINH .

    $default  reduce using rule 20 (unary)


State 9

   21 unary: COSH .

    $default  reduce using rule 21 (unary)


State 10

   22 unary: TANH .

    $default  reduce using rule 22 (unary)


State 11

   23 unary: SECH .

    $default  reduce using rule 23 (unary)


State 12

   24 unary: CSCH .

    $default  reduce using rule 24 (unary)


State 13

   25 unary: COTH .

    $default  reduce using rule 25 (unary)


State 14

   26 unary: SIN .

    $default  reduce using rule 26 (unary)


State 15

   27 unary: COS .

    $default  reduce using rule 27 (unary)


State 16

   28 unary: TAN .

    $default  reduce using rule 28 (unary)


State 17

   29 unary: SEC .

    $default  reduce using rule 29 (unary)


State 18

   30 unary: CSC .

    $default  reduce using rule 30 (unary)


State 19

   31 unary: COT .

    $default  reduce using rule 31 (unary)


State 20

   16 unary: SUB .

    $default  reduce using rule 16 (unary)


State 21

   15 unary: BRACK .

    $default  reduce using rule 15 (unary)


State 22

    3 line: ENDL .

    $default  reduce using rule 3 (line)


State 23

    2 asciimath: asciimath line .

    $default  reduce using rule 2 (asciimath)


State 24

    4 line: expression . ENDL
    6 expression: expression . bin expression

    ADD   shift, and go to state 27
    SUB   shift, and go to state 28
    MUL   shift, and go to state 29
    DIV   shift, and go to state 30
    EXP   shift, and go to state 31
    ENDL  shift, and go to state 32

    bin  go to state 33


State 25

    7 expression: num .

    $default  reduce using rule 7 (expression)


State 26

    5 expression: unary . expression

    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4
    ASIN   shift, and go to state 5
    ACOS   shift, and go to state 6
    ATAN   shift, and go to state 7
    SINH   shift, and go to state 8
    COSH   shift, and go to state 9
    TANH   shift, and go to state 10
    SECH   shift, and go to state 11
    CSCH   shift, and go to state 12
    COTH   shift, and go to state 13
    SIN    shift, and go to state 14
    COS    shift, and go to state 15
    TAN    shift, and go to state 16
    SEC    shift, and go to state 17
    CSC    shift, and go to state 18
    COT    shift, and go to state 19
    SUB    shift, and go to state 20
    BRACK  shift, and go to state 21

    expression  go to state 34
    num         go to state 25
    unary       go to state 26


State 27

   10 bin: ADD .

    $default  reduce using rule 10 (bin)


State 28

   11 bin: SUB .

    $default  reduce using rule 11 (bin)


State 29

   12 bin: MUL .

    $default  reduce using rule 12 (bin)


State 30

   13 bin: DIV .

    $default  reduce using rule 13 (bin)


State 31

   14 bin: EXP .

    $default  reduce using rule 14 (bin)


State 32

    4 line: expression ENDL .

    $default  reduce using rule 4 (line)


State 33

    6 expression: expression bin . expression

    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4
    ASIN   shift, and go to state 5
    ACOS   shift, and go to state 6
    ATAN   shift, and go to state 7
    SINH   shift, and go to state 8
    COSH   shift, and go to state 9
    TANH   shift, and go to state 10
    SECH   shift, and go to state 11
    CSCH   shift, and go to state 12
    COTH   shift, and go to state 13
    SIN    shift, and go to state 14
    COS    shift, and go to state 15
    TAN    shift, and go to state 16
    SEC    shift, and go to state 17
    CSC    shift, and go to state 18
    COT    shift, and go to state 19
    SUB    shift, and go to state 20
    BRACK  shift, and go to state 21

    expression  go to state 35
    num         go to state 25
    unary       go to state 26


State 34

    5 expression: unary expression .
    6           | expression . bin expression

    ADD  shift, and go to state 27
    SUB  shift, and go to state 28
    MUL  shift, and go to state 29
    DIV  shift, and go to state 30
    EXP  shift, and go to state 31

    ADD       [reduce using rule 5 (expression)]
    SUB       [reduce using rule 5 (expression)]
    MUL       [reduce using rule 5 (expression)]
    DIV       [reduce using rule 5 (expression)]
    EXP       [reduce using rule 5 (expression)]
    $default  reduce using rule 5 (expression)

    bin  go to state 33


State 35

    6 expression: expression . bin expression
    6           | expression bin expression .

    ADD  shift, and go to state 27
    SUB  shift, and go to state 28
    MUL  shift, and go to state 29
    DIV  shift, and go to state 30
    EXP  shift, and go to state 31

    ADD       [reduce using rule 6 (expression)]
    SUB       [reduce using rule 6 (expression)]
    MUL       [reduce using rule 6 (expression)]
    DIV       [reduce using rule 6 (expression)]
    EXP       [reduce using rule 6 (expression)]
    $default  reduce using rule 6 (expression)

    bin  go to state 33
