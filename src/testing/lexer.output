Nonterminals useless in grammar

    eol


Rules useless in grammar

   31 eol: ENDL


State 33 conflicts: 5 shift/reduce
State 34 conflicts: 5 shift/reduce


Grammar

    0 $accept: asciimath $end

    1 asciimath: %empty
    2          | asciimath line

    3 line: ENDL
    4     | expression ENDL

    5 expression: unary expression
    6           | expression binary expression
    7           | num

    8 num: INT
    9    | FLOAT

   10 binary: ADD
   11       | SUB
   12       | MUL
   13       | DIV
   14       | EXP

   15 unary: SUB
   16      | ASIN
   17      | ACOS
   18      | ATAN
   19      | SINH
   20      | COSH
   21      | TANH
   22      | SECH
   23      | CSCH
   24      | COTH
   25      | SIN
   26      | COS
   27      | TAN
   28      | SEC
   29      | CSC
   30      | COT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT <ival> (258) 8
    FLOAT <fval> (259) 9
    ADD (260) 10
    SUB (261) 11 15
    MUL (262) 12
    DIV (263) 13
    NEG (264)
    EXP (265) 14
    ASIN (266) 16
    ACOS (267) 17
    ATAN (268) 18
    SINH (269) 19
    COSH (270) 20
    TANH (271) 21
    SECH (272) 22
    CSCH (273) 23
    COTH (274) 24
    SIN (275) 25
    COS (276) 26
    TAN (277) 27
    SEC (278) 28
    CSC (279) 29
    COT (280) 30
    ENDL (281) 3 4


Nonterminals, with rules where they appear

    $accept (27)
        on left: 0
    asciimath (28)
        on left: 1 2
        on right: 0 2
    line (29)
        on left: 3 4
        on right: 2
    expression (30)
        on left: 5 6 7
        on right: 4 5 6
    num (31)
        on left: 8 9
        on right: 7
    binary (32)
        on left: 10 11 12 13 14
        on right: 6
    unary (33)
        on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
        on right: 5


State 0

    0 $accept: . asciimath $end
    1 asciimath: . %empty
    2          | . asciimath line

    $default  reduce using rule 1 (asciimath)

    asciimath  go to state 1


State 1

    0 $accept: asciimath . $end
    2 asciimath: asciimath . line
    3 line: . ENDL
    4     | . expression ENDL
    5 expression: . unary expression
    6           | . expression binary expression
    7           | . num
    8 num: . INT
    9    | . FLOAT
   15 unary: . SUB
   16      | . ASIN
   17      | . ACOS
   18      | . ATAN
   19      | . SINH
   20      | . COSH
   21      | . TANH
   22      | . SECH
   23      | . CSCH
   24      | . COTH
   25      | . SIN
   26      | . COS
   27      | . TAN
   28      | . SEC
   29      | . CSC
   30      | . COT

    $end   shift, and go to state 2
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4
    SUB    shift, and go to state 5
    ASIN   shift, and go to state 6
    ACOS   shift, and go to state 7
    ATAN   shift, and go to state 8
    SINH   shift, and go to state 9
    COSH   shift, and go to state 10
    TANH   shift, and go to state 11
    SECH   shift, and go to state 12
    CSCH   shift, and go to state 13
    COTH   shift, and go to state 14
    SIN    shift, and go to state 15
    COS    shift, and go to state 16
    TAN    shift, and go to state 17
    SEC    shift, and go to state 18
    CSC    shift, and go to state 19
    COT    shift, and go to state 20
    ENDL   shift, and go to state 21

    line        go to state 22
    expression  go to state 23
    num         go to state 24
    unary       go to state 25


State 2

    0 $accept: asciimath $end .

    $default  accept


State 3

    8 num: INT .

    $default  reduce using rule 8 (num)


State 4

    9 num: FLOAT .

    $default  reduce using rule 9 (num)


State 5

   15 unary: SUB .

    $default  reduce using rule 15 (unary)


State 6

   16 unary: ASIN .

    $default  reduce using rule 16 (unary)


State 7

   17 unary: ACOS .

    $default  reduce using rule 17 (unary)


State 8

   18 unary: ATAN .

    $default  reduce using rule 18 (unary)


State 9

   19 unary: SINH .

    $default  reduce using rule 19 (unary)


State 10

   20 unary: COSH .

    $default  reduce using rule 20 (unary)


State 11

   21 unary: TANH .

    $default  reduce using rule 21 (unary)


State 12

   22 unary: SECH .

    $default  reduce using rule 22 (unary)


State 13

   23 unary: CSCH .

    $default  reduce using rule 23 (unary)


State 14

   24 unary: COTH .

    $default  reduce using rule 24 (unary)


State 15

   25 unary: SIN .

    $default  reduce using rule 25 (unary)


State 16

   26 unary: COS .

    $default  reduce using rule 26 (unary)


State 17

   27 unary: TAN .

    $default  reduce using rule 27 (unary)


State 18

   28 unary: SEC .

    $default  reduce using rule 28 (unary)


State 19

   29 unary: CSC .

    $default  reduce using rule 29 (unary)


State 20

   30 unary: COT .

    $default  reduce using rule 30 (unary)


State 21

    3 line: ENDL .

    $default  reduce using rule 3 (line)


State 22

    2 asciimath: asciimath line .

    $default  reduce using rule 2 (asciimath)


State 23

    4 line: expression . ENDL
    6 expression: expression . binary expression
   10 binary: . ADD
   11       | . SUB
   12       | . MUL
   13       | . DIV
   14       | . EXP

    ADD   shift, and go to state 26
    SUB   shift, and go to state 27
    MUL   shift, and go to state 28
    DIV   shift, and go to state 29
    EXP   shift, and go to state 30
    ENDL  shift, and go to state 31

    binary  go to state 32


State 24

    7 expression: num .

    $default  reduce using rule 7 (expression)


State 25

    5 expression: . unary expression
    5           | unary . expression
    6           | . expression binary expression
    7           | . num
    8 num: . INT
    9    | . FLOAT
   15 unary: . SUB
   16      | . ASIN
   17      | . ACOS
   18      | . ATAN
   19      | . SINH
   20      | . COSH
   21      | . TANH
   22      | . SECH
   23      | . CSCH
   24      | . COTH
   25      | . SIN
   26      | . COS
   27      | . TAN
   28      | . SEC
   29      | . CSC
   30      | . COT

    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4
    SUB    shift, and go to state 5
    ASIN   shift, and go to state 6
    ACOS   shift, and go to state 7
    ATAN   shift, and go to state 8
    SINH   shift, and go to state 9
    COSH   shift, and go to state 10
    TANH   shift, and go to state 11
    SECH   shift, and go to state 12
    CSCH   shift, and go to state 13
    COTH   shift, and go to state 14
    SIN    shift, and go to state 15
    COS    shift, and go to state 16
    TAN    shift, and go to state 17
    SEC    shift, and go to state 18
    CSC    shift, and go to state 19
    COT    shift, and go to state 20

    expression  go to state 33
    num         go to state 24
    unary       go to state 25


State 26

   10 binary: ADD .

    $default  reduce using rule 10 (binary)


State 27

   11 binary: SUB .

    $default  reduce using rule 11 (binary)


State 28

   12 binary: MUL .

    $default  reduce using rule 12 (binary)


State 29

   13 binary: DIV .

    $default  reduce using rule 13 (binary)


State 30

   14 binary: EXP .

    $default  reduce using rule 14 (binary)


State 31

    4 line: expression ENDL .

    $default  reduce using rule 4 (line)


State 32

    5 expression: . unary expression
    6           | . expression binary expression
    6           | expression binary . expression
    7           | . num
    8 num: . INT
    9    | . FLOAT
   15 unary: . SUB
   16      | . ASIN
   17      | . ACOS
   18      | . ATAN
   19      | . SINH
   20      | . COSH
   21      | . TANH
   22      | . SECH
   23      | . CSCH
   24      | . COTH
   25      | . SIN
   26      | . COS
   27      | . TAN
   28      | . SEC
   29      | . CSC
   30      | . COT

    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4
    SUB    shift, and go to state 5
    ASIN   shift, and go to state 6
    ACOS   shift, and go to state 7
    ATAN   shift, and go to state 8
    SINH   shift, and go to state 9
    COSH   shift, and go to state 10
    TANH   shift, and go to state 11
    SECH   shift, and go to state 12
    CSCH   shift, and go to state 13
    COTH   shift, and go to state 14
    SIN    shift, and go to state 15
    COS    shift, and go to state 16
    TAN    shift, and go to state 17
    SEC    shift, and go to state 18
    CSC    shift, and go to state 19
    COT    shift, and go to state 20

    expression  go to state 34
    num         go to state 24
    unary       go to state 25


State 33

    5 expression: unary expression .  [ADD, SUB, MUL, DIV, EXP, ENDL]
    6           | expression . binary expression
   10 binary: . ADD
   11       | . SUB
   12       | . MUL
   13       | . DIV
   14       | . EXP

    ADD  shift, and go to state 26
    SUB  shift, and go to state 27
    MUL  shift, and go to state 28
    DIV  shift, and go to state 29
    EXP  shift, and go to state 30

    ADD       [reduce using rule 5 (expression)]
    SUB       [reduce using rule 5 (expression)]
    MUL       [reduce using rule 5 (expression)]
    DIV       [reduce using rule 5 (expression)]
    EXP       [reduce using rule 5 (expression)]
    $default  reduce using rule 5 (expression)

    binary  go to state 32


State 34

    6 expression: expression . binary expression
    6           | expression binary expression .  [ADD, SUB, MUL, DIV, EXP, ENDL]
   10 binary: . ADD
   11       | . SUB
   12       | . MUL
   13       | . DIV
   14       | . EXP

    ADD  shift, and go to state 26
    SUB  shift, and go to state 27
    MUL  shift, and go to state 28
    DIV  shift, and go to state 29
    EXP  shift, and go to state 30

    ADD       [reduce using rule 6 (expression)]
    SUB       [reduce using rule 6 (expression)]
    MUL       [reduce using rule 6 (expression)]
    DIV       [reduce using rule 6 (expression)]
    EXP       [reduce using rule 6 (expression)]
    $default  reduce using rule 6 (expression)

    binary  go to state 32
